##############################################################
shellcode für mmap funktion!!!!

  4000a9:	bf 00 00 00 00       	mov    edi,0x0
  4000ae:	be 00 00 40 00       	mov    esi,0x400000
  4000b3:	ba 07 00 00 00       	mov    edx,0x7
  4000b8:	41 ba 22 00 00 00    	mov    r10d,0x22
  4000be:	b8 09 00 00 00       	mov    eax,0x9
  4000c3:	0f 05                	syscall 
  4000c5:	c3                   	ret  			//return wird durch cc also SIGTRAP ersetzt
  
  
 ############################################################### 
  #define MMAP_STUB			"\xbf\x00\x00\x00\x00"		\
							"\xbe\x00\x00\x40\x00"		\
							"\xba\x07\x00\x00\x00"		\
							"\x41\xba\x22\x00\x00\x00"	\
							"\xb8\x09\x00\x00\x00"		\
							"\x0f\x05"					\
							"\xcc"
							
###############################################################

//shellcode für clone(inklusive clone stack)
//Die erste Adresse des payload wird in das rsi register direkt zu beginn geladen
//deswegen ist es wichtig die payload direkt an den Thread_STUB anzuhängen 


0000000000400080 <_start>:
  400080:	48 8d 3d 3f 00 00 00 	lea    rdi,[rip+0x3f]        # 4000c6 <thread_funk>
  400087:	e8 01 00 00 00       	call   40008d <thread_create>
  40008c:	cc                   	int3   

000000000040008d <thread_create>:
  40008d:	57                   	push   rdi
  40008e:	e8 16 00 00 00       	call   4000a9 <get_stack>
  400093:	48 8d b0 f8 ff 3f 00 	lea    rsi,[rax+0x3ffff8]
  40009a:	8f 06                	pop    QWORD PTR [rsi]
  40009c:	bf 00 09 01 00       	mov    edi,0x10900
  4000a1:	b8 38 00 00 00       	mov    eax,0x38
  4000a6:	0f 05                	syscall 
  4000a8:	c3                   	ret    

00000000004000a9 <get_stack>:
  4000a9:	bf 00 00 00 00       	mov    edi,0x0
  4000ae:	be 00 00 40 00       	mov    esi,0x400000
  4000b3:	ba 07 00 00 00       	mov    edx,0x7
  4000b8:	41 ba 22 00 00 00    	mov    r10d,0x22
  4000be:	b8 09 00 00 00       	mov    eax,0x9
  4000c3:	0f 05                	syscall 
  4000c5:	c3                   	ret

#################################################################
#define THREAD_STUB			"\x48\x8d\x3d\x3f\x00\x00\x00"	\
							"\xe8\x01\x00\x00\x00"			\
							"\xcc"							\
							"\x57"							\
							"\xe8\x16\x00\x00\x00"			\
							"\x48\x8d\xb0\xf8\xff\x3f\x00"	\
							"\x8f\x06"						\
							"\xbf\x00\x09\x01\x00"			\
							"\xb8\x38\x00\x00\x00"			\
							"\x0f\x05"						\
							"\xc3"							\
							"\xbf\x00\x00\x00\x00"			\
							"\xbe\x00\x00\x40\x00"			\
							"\xba\x07\x00\x00\x00"			\
							"\x41\xba\x22\x00\x00\x00"		\
							"\xb8\x09\x00\x00\x00"			\
							"\x0f\x05"						\
							"\xcc"
##################################################################

//payloads werden direkt unter der Thread_stub hinzugefügt
//wichtig voraussetztung ist das der Shellcode relative adressem verwendet
//der shellcode darf kein ret beinhalten!
//das ende der Payload muss aus einem exit syscall bestehen!!

//möglicher BeispielPayload: Hallo World

00000000004000c6 <thread_funk>:
  4000c6:	eb 0c                	jmp    4000d4 <MainPayload>

00000000004000c8 <str>:
  4000c8:	48                   	rex.W
  4000c9:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  4000cb:	6c                   	ins    BYTE PTR es:[rdi],dx
  4000cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4000cd:	20 57 6f             	and    BYTE PTR [rdi+0x6f],dl
  4000d0:	72 6c                	jb     40013e <MainPayload.exit+0x52>
  4000d2:	64 0a b8 01 00 00 00 	or     bh,BYTE PTR fs:[rax+0x1]

00000000004000d4 <MainPayload>:
  4000d4:	b8 01 00 00 00       	mov    eax,0x1
  4000d9:	bf 01 00 00 00       	mov    edi,0x1
  4000de:	48 8d 35 e3 ff ff ff 	lea    rsi,[rip+0xffffffffffffffe3]        # 4000c8 <str>
  4000e5:	ba 0c 00 00 00       	mov    edx,0xc
  4000ea:	0f 05                	syscall 

00000000004000ec <MainPayload.exit>:
  4000ec:	bf 00 00 00 00       	mov    edi,0x0
  4000f1:	b8 3c 00 00 00       	mov    eax,0x3c
  4000f6:	0f 05                	syscall 
  
  
  Hallo World + Exit
  ############################################################
#define Hallo_World			"\xeb\x0c"						\
							"\x48"							\
							"\x65\x6c"						\
							"\x6c"							\
							"\x6f"							\
							"\x20\x57\x6f"					\
							"\x72\x6c"						\
							"\x64\x0a\xb8\x01\x00\x00\x00"	\
							"\xb8\x01\x00\x00\x00"			\
							"\xbf\x01\x00\x00\x00"			\
							"\x48\x8d\x35\xe3\xff\xff\xff"	\
							"\xba\x0c\x00\x00\x00"			\
							"\x0f\x05"						\
##############################################################Ab hier exit syscall							
							"\xbf\x00\x00\x00\x00"			\
							"\xb8\x3c\x00\x00\x00"			\
							"\x0f\x05"						\
##############################################################							








							
