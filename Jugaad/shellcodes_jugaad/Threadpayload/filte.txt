
tshellcode:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x233>
  400248:	78 38                	js     400282 <_init-0x226>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 a1 b2 10 ae 45    	add    BYTE PTR [rcx+0x45ae10b2],ah
  400289:	60                   	(bad)  
  40028a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40028b:	f7 26                	mul    DWORD PTR [rsi]
  40028d:	a1 b8 b8 39 b0 aa 36 	movabs eax,ds:0xa1c536aab039b8b8
  400294:	c5 a1 
  400296:	b0 72                	mov    al,0x72

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	10 00                	adc    BYTE PTR [rax],al
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	1a 00                	sbb    al,BYTE PTR [rax]
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002fe:	00 00                	add    BYTE PTR [rax],al
  400300:	15 00 00 00 12       	adc    eax,0x12000000
	...
  400315:	00 00                	add    BYTE PTR [rax],al
  400317:	00 26                	add    BYTE PTR [rsi],ah
  400319:	00 00                	add    BYTE PTR [rax],al
  40031b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40032d:	00 00                	add    BYTE PTR [rax],al
  40032f:	00 38                	add    BYTE PTR [rax],bh
  400331:	00 00                	add    BYTE PTR [rax],al
  400333:	00 20                	add    BYTE PTR [rax],ah
	...
  400345:	00 00                	add    BYTE PTR [rax],al
  400347:	00 0b                	add    BYTE PTR [rbx],cl
  400349:	00 00                	add    BYTE PTR [rax],al
  40034b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40035d:	00 00                	add    BYTE PTR [rax],al
  40035f:	00 20                	add    BYTE PTR [rax],ah
  400361:	00 00                	add    BYTE PTR [rax],al
  400363:	00 12                	add    BYTE PTR [rdx],dl
	...

Disassembly of section .dynstr:

0000000000400378 <.dynstr>:
  400378:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40037c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  40037e:	73 6f                	jae    4003ef <_init-0xb9>
  400380:	2e 36 00 65 78       	cs add BYTE PTR ss:[rbp+0x78],ah
  400385:	69 74 00 70 75 74 73 	imul   esi,DWORD PTR [rax+rax*1+0x70],0x737475
  40038c:	00 
  40038d:	6d                   	ins    DWORD PTR es:[rdi],dx
  40038e:	6d                   	ins    DWORD PTR es:[rdi],dx
  40038f:	61                   	(bad)  
  400390:	70 00                	jo     400392 <_init-0x116>
  400392:	63 6c 6f 6e          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x6e]
  400396:	65 00 73 6c          	add    BYTE PTR gs:[rbx+0x6c],dh
  40039a:	65 65 70 00          	gs gs jo 40039e <_init-0x10a>
  40039e:	5f                   	pop    rdi
  40039f:	5f                   	pop    rdi
  4003a0:	6c                   	ins    BYTE PTR es:[rdi],dx
  4003a1:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  4003a8:	72 74                	jb     40041e <_init-0x8a>
  4003aa:	5f                   	pop    rdi
  4003ab:	6d                   	ins    DWORD PTR es:[rdi],dx
  4003ac:	61                   	(bad)  
  4003ad:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  4003b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4003b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4003b6:	5f                   	pop    rdi
  4003b7:	73 74                	jae    40042d <_init-0x7b>
  4003b9:	61                   	(bad)  
  4003ba:	72 74                	jb     400430 <_init-0x78>
  4003bc:	5f                   	pop    rdi
  4003bd:	5f                   	pop    rdi
  4003be:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  4003c1:	49                   	rex.WB
  4003c2:	42                   	rex.X
  4003c3:	43 5f                	rex.XB pop r15
  4003c5:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003c7:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003c9:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003cc <.gnu.version>:
  4003cc:	00 00                	add    BYTE PTR [rax],al
  4003ce:	02 00                	add    al,BYTE PTR [rax]
  4003d0:	02 00                	add    al,BYTE PTR [rax]
  4003d2:	02 00                	add    al,BYTE PTR [rax]
  4003d4:	02 00                	add    al,BYTE PTR [rax]
  4003d6:	00 00                	add    BYTE PTR [rax],al
  4003d8:	02 00                	add    al,BYTE PTR [rax]
  4003da:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

00000000004003e0 <.gnu.version_r>:
  4003e0:	01 00                	add    DWORD PTR [rax],eax
  4003e2:	01 00                	add    DWORD PTR [rax],eax
  4003e4:	01 00                	add    DWORD PTR [rax],eax
  4003e6:	00 00                	add    BYTE PTR [rax],al
  4003e8:	10 00                	adc    BYTE PTR [rax],al
  4003ea:	00 00                	add    BYTE PTR [rax],al
  4003ec:	00 00                	add    BYTE PTR [rax],al
  4003ee:	00 00                	add    BYTE PTR [rax],al
  4003f0:	75 1a                	jne    40040c <_init-0x9c>
  4003f2:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  4003f8:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
  4003fb:	00 00                	add    BYTE PTR [rax],al
  4003fd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400400 <.rela.dyn>:
  400400:	f8                   	clc    
  400401:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  400404:	00 00                	add    BYTE PTR [rax],al
  400406:	00 00                	add    BYTE PTR [rax],al
  400408:	06                   	(bad)  
  400409:	00 00                	add    BYTE PTR [rax],al
  40040b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400411 <_init-0x97>
  400411:	00 00                	add    BYTE PTR [rax],al
  400413:	00 00                	add    BYTE PTR [rax],al
  400415:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.plt:

0000000000400418 <.rela.plt>:
  400418:	18 10                	sbb    BYTE PTR [rax],dl
  40041a:	60                   	(bad)  
  40041b:	00 00                	add    BYTE PTR [rax],al
  40041d:	00 00                	add    BYTE PTR [rax],al
  40041f:	00 07                	add    BYTE PTR [rdi],al
  400421:	00 00                	add    BYTE PTR [rax],al
  400423:	00 01                	add    BYTE PTR [rcx],al
	...
  40042d:	00 00                	add    BYTE PTR [rax],al
  40042f:	00 20                	add    BYTE PTR [rax],ah
  400431:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400434:	00 00                	add    BYTE PTR [rax],al
  400436:	00 00                	add    BYTE PTR [rax],al
  400438:	07                   	(bad)  
  400439:	00 00                	add    BYTE PTR [rax],al
  40043b:	00 02                	add    BYTE PTR [rdx],al
	...
  400445:	00 00                	add    BYTE PTR [rax],al
  400447:	00 28                	add    BYTE PTR [rax],ch
  400449:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  40044c:	00 00                	add    BYTE PTR [rax],al
  40044e:	00 00                	add    BYTE PTR [rax],al
  400450:	07                   	(bad)  
  400451:	00 00                	add    BYTE PTR [rax],al
  400453:	00 03                	add    BYTE PTR [rbx],al
	...
  40045d:	00 00                	add    BYTE PTR [rax],al
  40045f:	00 30                	add    BYTE PTR [rax],dh
  400461:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400464:	00 00                	add    BYTE PTR [rax],al
  400466:	00 00                	add    BYTE PTR [rax],al
  400468:	07                   	(bad)  
  400469:	00 00                	add    BYTE PTR [rax],al
  40046b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  400476:	00 00                	add    BYTE PTR [rax],al
  400478:	38 10                	cmp    BYTE PTR [rax],dl
  40047a:	60                   	(bad)  
  40047b:	00 00                	add    BYTE PTR [rax],al
  40047d:	00 00                	add    BYTE PTR [rax],al
  40047f:	00 07                	add    BYTE PTR [rdi],al
  400481:	00 00                	add    BYTE PTR [rax],al
  400483:	00 06                	add    BYTE PTR [rsi],al
	...
  40048d:	00 00                	add    BYTE PTR [rax],al
  40048f:	00 40 10             	add    BYTE PTR [rax+0x10],al
  400492:	60                   	(bad)  
  400493:	00 00                	add    BYTE PTR [rax],al
  400495:	00 00                	add    BYTE PTR [rax],al
  400497:	00 07                	add    BYTE PTR [rdi],al
  400499:	00 00                	add    BYTE PTR [rax],al
  40049b:	00 07                	add    BYTE PTR [rdi],al
	...

Disassembly of section .init:

00000000004004a8 <_init>:
  4004a8:	48 83 ec 08          	sub    rsp,0x8
  4004ac:	48 8b 05 45 0b 20 00 	mov    rax,QWORD PTR [rip+0x200b45]        # 600ff8 <_DYNAMIC+0x1d0>
  4004b3:	48 85 c0             	test   rax,rax
  4004b6:	74 05                	je     4004bd <_init+0x15>
  4004b8:	e8 83 00 00 00       	call   400540 <sleep@plt+0x10>
  4004bd:	48 83 c4 08          	add    rsp,0x8
  4004c1:	c3                   	ret    

Disassembly of section .plt:

00000000004004d0 <puts@plt-0x10>:
  4004d0:	ff 35 32 0b 20 00    	push   QWORD PTR [rip+0x200b32]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004d6:	ff 25 34 0b 20 00    	jmp    QWORD PTR [rip+0x200b34]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004004e0 <puts@plt>:
  4004e0:	ff 25 32 0b 20 00    	jmp    QWORD PTR [rip+0x200b32]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4004e6:	68 00 00 00 00       	push   0x0
  4004eb:	e9 e0 ff ff ff       	jmp    4004d0 <_init+0x28>

00000000004004f0 <clone@plt>:
  4004f0:	ff 25 2a 0b 20 00    	jmp    QWORD PTR [rip+0x200b2a]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004f6:	68 01 00 00 00       	push   0x1
  4004fb:	e9 d0 ff ff ff       	jmp    4004d0 <_init+0x28>

0000000000400500 <mmap@plt>:
  400500:	ff 25 22 0b 20 00    	jmp    QWORD PTR [rip+0x200b22]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400506:	68 02 00 00 00       	push   0x2
  40050b:	e9 c0 ff ff ff       	jmp    4004d0 <_init+0x28>

0000000000400510 <__libc_start_main@plt>:
  400510:	ff 25 1a 0b 20 00    	jmp    QWORD PTR [rip+0x200b1a]        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400516:	68 03 00 00 00       	push   0x3
  40051b:	e9 b0 ff ff ff       	jmp    4004d0 <_init+0x28>

0000000000400520 <exit@plt>:
  400520:	ff 25 12 0b 20 00    	jmp    QWORD PTR [rip+0x200b12]        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400526:	68 04 00 00 00       	push   0x4
  40052b:	e9 a0 ff ff ff       	jmp    4004d0 <_init+0x28>

0000000000400530 <sleep@plt>:
  400530:	ff 25 0a 0b 20 00    	jmp    QWORD PTR [rip+0x200b0a]        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400536:	68 05 00 00 00       	push   0x5
  40053b:	e9 90 ff ff ff       	jmp    4004d0 <_init+0x28>

Disassembly of section .plt.got:

0000000000400540 <.plt.got>:
  400540:	ff 25 b2 0a 20 00    	jmp    QWORD PTR [rip+0x200ab2]        # 600ff8 <_DYNAMIC+0x1d0>
  400546:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000400550 <_start>:
  400550:	31 ed                	xor    ebp,ebp
  400552:	49 89 d1             	mov    r9,rdx
  400555:	5e                   	pop    rsi
  400556:	48 89 e2             	mov    rdx,rsp
  400559:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40055d:	50                   	push   rax
  40055e:	54                   	push   rsp
  40055f:	49 c7 c0 70 07 40 00 	mov    r8,0x400770
  400566:	48 c7 c1 00 07 40 00 	mov    rcx,0x400700
  40056d:	48 c7 c7 ce 06 40 00 	mov    rdi,0x4006ce
  400574:	e8 97 ff ff ff       	call   400510 <__libc_start_main@plt>
  400579:	f4                   	hlt    
  40057a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400580 <deregister_tm_clones>:
  400580:	b8 5f 10 60 00       	mov    eax,0x60105f
  400585:	55                   	push   rbp
  400586:	48 2d 58 10 60 00    	sub    rax,0x601058
  40058c:	48 83 f8 0e          	cmp    rax,0xe
  400590:	48 89 e5             	mov    rbp,rsp
  400593:	76 1b                	jbe    4005b0 <deregister_tm_clones+0x30>
  400595:	b8 00 00 00 00       	mov    eax,0x0
  40059a:	48 85 c0             	test   rax,rax
  40059d:	74 11                	je     4005b0 <deregister_tm_clones+0x30>
  40059f:	5d                   	pop    rbp
  4005a0:	bf 58 10 60 00       	mov    edi,0x601058
  4005a5:	ff e0                	jmp    rax
  4005a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  4005ae:	00 00 
  4005b0:	5d                   	pop    rbp
  4005b1:	c3                   	ret    
  4005b2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  4005b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4005bd:	00 00 00 

00000000004005c0 <register_tm_clones>:
  4005c0:	be 58 10 60 00       	mov    esi,0x601058
  4005c5:	55                   	push   rbp
  4005c6:	48 81 ee 58 10 60 00 	sub    rsi,0x601058
  4005cd:	48 c1 fe 03          	sar    rsi,0x3
  4005d1:	48 89 e5             	mov    rbp,rsp
  4005d4:	48 89 f0             	mov    rax,rsi
  4005d7:	48 c1 e8 3f          	shr    rax,0x3f
  4005db:	48 01 c6             	add    rsi,rax
  4005de:	48 d1 fe             	sar    rsi,1
  4005e1:	74 15                	je     4005f8 <register_tm_clones+0x38>
  4005e3:	b8 00 00 00 00       	mov    eax,0x0
  4005e8:	48 85 c0             	test   rax,rax
  4005eb:	74 0b                	je     4005f8 <register_tm_clones+0x38>
  4005ed:	5d                   	pop    rbp
  4005ee:	bf 58 10 60 00       	mov    edi,0x601058
  4005f3:	ff e0                	jmp    rax
  4005f5:	0f 1f 00             	nop    DWORD PTR [rax]
  4005f8:	5d                   	pop    rbp
  4005f9:	c3                   	ret    
  4005fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400600 <__do_global_dtors_aux>:
  400600:	80 3d 51 0a 20 00 00 	cmp    BYTE PTR [rip+0x200a51],0x0        # 601058 <__TMC_END__>
  400607:	75 11                	jne    40061a <__do_global_dtors_aux+0x1a>
  400609:	55                   	push   rbp
  40060a:	48 89 e5             	mov    rbp,rsp
  40060d:	e8 6e ff ff ff       	call   400580 <deregister_tm_clones>
  400612:	5d                   	pop    rbp
  400613:	c6 05 3e 0a 20 00 01 	mov    BYTE PTR [rip+0x200a3e],0x1        # 601058 <__TMC_END__>
  40061a:	f3 c3                	repz ret 
  40061c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400620 <frame_dummy>:
  400620:	bf 20 0e 60 00       	mov    edi,0x600e20
  400625:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400629:	75 05                	jne    400630 <frame_dummy+0x10>
  40062b:	eb 93                	jmp    4005c0 <register_tm_clones>
  40062d:	0f 1f 00             	nop    DWORD PTR [rax]
  400630:	b8 00 00 00 00       	mov    eax,0x0
  400635:	48 85 c0             	test   rax,rax
  400638:	74 f1                	je     40062b <frame_dummy+0xb>
  40063a:	55                   	push   rbp
  40063b:	48 89 e5             	mov    rbp,rsp
  40063e:	ff d0                	call   rax
  400640:	5d                   	pop    rbp
  400641:	e9 7a ff ff ff       	jmp    4005c0 <register_tm_clones>

0000000000400646 <payload>:
  400646:	55                   	push   rbp
  400647:	48 89 e5             	mov    rbp,rsp
  40064a:	48 83 ec 10          	sub    rsp,0x10
  40064e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  400652:	bf 84 07 40 00       	mov    edi,0x400784
  400657:	e8 84 fe ff ff       	call   4004e0 <puts@plt>
  40065c:	bf 02 00 00 00       	mov    edi,0x2
  400661:	e8 ca fe ff ff       	call   400530 <sleep@plt>
  400666:	bf 00 00 00 00       	mov    edi,0x0
  40066b:	e8 b0 fe ff ff       	call   400520 <exit@plt>

0000000000400670 <shellcode>:
  400670:	55                   	push   rbp
  400671:	48 89 e5             	mov    rbp,rsp
  400674:	48 83 ec 20          	sub    rsp,0x20
  400678:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  40067c:	41 b9 00 00 00 00    	mov    r9d,0x0
  400682:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
  400688:	b9 22 00 00 00       	mov    ecx,0x22
  40068d:	ba 07 00 00 00       	mov    edx,0x7
  400692:	be 20 4e 00 00       	mov    esi,0x4e20
  400697:	bf 00 00 00 00       	mov    edi,0x0
  40069c:	e8 5f fe ff ff       	call   400500 <mmap@plt>
  4006a1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4006a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4006a9:	48 8d b0 a0 4f 00 00 	lea    rsi,[rax+0x4fa0]
  4006b0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4006b4:	b9 00 00 00 00       	mov    ecx,0x0
  4006b9:	ba 00 09 01 00       	mov    edx,0x10900
  4006be:	48 89 c7             	mov    rdi,rax
  4006c1:	b8 00 00 00 00       	mov    eax,0x0
  4006c6:	e8 25 fe ff ff       	call   4004f0 <clone@plt>
  4006cb:	90                   	nop
  4006cc:	c9                   	leave  
  4006cd:	c3                   	ret    

00000000004006ce <main>:
  4006ce:	55                   	push   rbp
  4006cf:	48 89 e5             	mov    rbp,rsp
  4006d2:	bf 46 06 40 00       	mov    edi,0x400646
  4006d7:	e8 94 ff ff ff       	call   400670 <shellcode>
  4006dc:	bf 96 07 40 00       	mov    edi,0x400796
  4006e1:	e8 fa fd ff ff       	call   4004e0 <puts@plt>
  4006e6:	bf 04 00 00 00       	mov    edi,0x4
  4006eb:	e8 40 fe ff ff       	call   400530 <sleep@plt>
  4006f0:	cc                   	int3   
  4006f1:	b8 00 00 00 00       	mov    eax,0x0
  4006f6:	5d                   	pop    rbp
  4006f7:	c3                   	ret    
  4006f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  4006ff:	00 

0000000000400700 <__libc_csu_init>:
  400700:	41 57                	push   r15
  400702:	41 56                	push   r14
  400704:	41 89 ff             	mov    r15d,edi
  400707:	41 55                	push   r13
  400709:	41 54                	push   r12
  40070b:	4c 8d 25 fe 06 20 00 	lea    r12,[rip+0x2006fe]        # 600e10 <__frame_dummy_init_array_entry>
  400712:	55                   	push   rbp
  400713:	48 8d 2d fe 06 20 00 	lea    rbp,[rip+0x2006fe]        # 600e18 <__init_array_end>
  40071a:	53                   	push   rbx
  40071b:	49 89 f6             	mov    r14,rsi
  40071e:	49 89 d5             	mov    r13,rdx
  400721:	4c 29 e5             	sub    rbp,r12
  400724:	48 83 ec 08          	sub    rsp,0x8
  400728:	48 c1 fd 03          	sar    rbp,0x3
  40072c:	e8 77 fd ff ff       	call   4004a8 <_init>
  400731:	48 85 ed             	test   rbp,rbp
  400734:	74 20                	je     400756 <__libc_csu_init+0x56>
  400736:	31 db                	xor    ebx,ebx
  400738:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40073f:	00 
  400740:	4c 89 ea             	mov    rdx,r13
  400743:	4c 89 f6             	mov    rsi,r14
  400746:	44 89 ff             	mov    edi,r15d
  400749:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40074d:	48 83 c3 01          	add    rbx,0x1
  400751:	48 39 eb             	cmp    rbx,rbp
  400754:	75 ea                	jne    400740 <__libc_csu_init+0x40>
  400756:	48 83 c4 08          	add    rsp,0x8
  40075a:	5b                   	pop    rbx
  40075b:	5d                   	pop    rbp
  40075c:	41 5c                	pop    r12
  40075e:	41 5d                	pop    r13
  400760:	41 5e                	pop    r14
  400762:	41 5f                	pop    r15
  400764:	c3                   	ret    
  400765:	90                   	nop
  400766:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40076d:	00 00 00 

0000000000400770 <__libc_csu_fini>:
  400770:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400774 <_fini>:
  400774:	48 83 ec 08          	sub    rsp,0x8
  400778:	48 83 c4 08          	add    rsp,0x8
  40077c:	c3                   	ret    

Disassembly of section .rodata:

0000000000400780 <_IO_stdin_used>:
  400780:	01 00                	add    DWORD PTR [rax],eax
  400782:	02 00                	add    al,BYTE PTR [rax]
  400784:	4a 75 67             	rex.WX jne 4007ee <__GNU_EH_FRAME_HDR+0x46>
  400787:	61                   	(bad)  
  400788:	61                   	(bad)  
  400789:	64 20 77 61          	and    BYTE PTR fs:[rdi+0x61],dh
  40078d:	73 20                	jae    4007af <__GNU_EH_FRAME_HDR+0x7>
  40078f:	68 65 72 65 21       	push   0x21657265
  400794:	2e 00 70 61          	add    BYTE PTR cs:[rax+0x61],dh
  400798:	72 65                	jb     4007ff <__GNU_EH_FRAME_HDR+0x57>
  40079a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40079b:	74 20                	je     4007bd <__GNU_EH_FRAME_HDR+0x15>
  40079d:	69 73 20 68 65 72 65 	imul   esi,DWORD PTR [rbx+0x20],0x65726568
	...

Disassembly of section .eh_frame_hdr:

00000000004007a8 <__GNU_EH_FRAME_HDR>:
  4007a8:	01 1b                	add    DWORD PTR [rbx],ebx
  4007aa:	03 3b                	add    edi,DWORD PTR [rbx]
  4007ac:	44 00 00             	add    BYTE PTR [rax],r8b
  4007af:	00 07                	add    BYTE PTR [rdi],al
  4007b1:	00 00                	add    BYTE PTR [rax],al
  4007b3:	00 28                	add    BYTE PTR [rax],ch
  4007b5:	fd                   	std    
  4007b6:	ff                   	(bad)  
  4007b7:	ff 90 00 00 00 a8    	call   QWORD PTR [rax-0x58000000]
  4007bd:	fd                   	std    
  4007be:	ff                   	(bad)  
  4007bf:	ff 60 00             	jmp    QWORD PTR [rax+0x0]
  4007c2:	00 00                	add    BYTE PTR [rax],al
  4007c4:	9e                   	sahf   
  4007c5:	fe                   	(bad)  
  4007c6:	ff                   	(bad)  
  4007c7:	ff                   	(bad)  
  4007c8:	b8 00 00 00 c8       	mov    eax,0xc8000000
  4007cd:	fe                   	(bad)  
  4007ce:	ff                   	(bad)  
  4007cf:	ff                   	(bad)  
  4007d0:	d8 00                	fadd   DWORD PTR [rax]
  4007d2:	00 00                	add    BYTE PTR [rax],al
  4007d4:	26 ff                	es (bad) 
  4007d6:	ff                   	(bad)  
  4007d7:	ff                   	(bad)  
  4007d8:	f8                   	clc    
  4007d9:	00 00                	add    BYTE PTR [rax],al
  4007db:	00 58 ff             	add    BYTE PTR [rax-0x1],bl
  4007de:	ff                   	(bad)  
  4007df:	ff 18                	call   FWORD PTR [rax]
  4007e1:	01 00                	add    DWORD PTR [rax],eax
  4007e3:	00 c8                	add    al,cl
  4007e5:	ff                   	(bad)  
  4007e6:	ff                   	(bad)  
  4007e7:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
	...

Disassembly of section .eh_frame:

00000000004007f0 <__FRAME_END__-0x130>:
  4007f0:	14 00                	adc    al,0x0
  4007f2:	00 00                	add    BYTE PTR [rax],al
  4007f4:	00 00                	add    BYTE PTR [rax],al
  4007f6:	00 00                	add    BYTE PTR [rax],al
  4007f8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4007fb:	00 01                	add    BYTE PTR [rcx],al
  4007fd:	78 10                	js     40080f <__GNU_EH_FRAME_HDR+0x67>
  4007ff:	01 1b                	add    DWORD PTR [rbx],ebx
  400801:	0c 07                	or     al,0x7
  400803:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400809:	00 00                	add    BYTE PTR [rax],al
  40080b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40080e:	00 00                	add    BYTE PTR [rax],al
  400810:	40 fd                	rex std 
  400812:	ff                   	(bad)  
  400813:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  40081d:	00 00                	add    BYTE PTR [rax],al
  40081f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  400822:	00 00                	add    BYTE PTR [rax],al
  400824:	00 00                	add    BYTE PTR [rax],al
  400826:	00 00                	add    BYTE PTR [rax],al
  400828:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  40082b:	00 01                	add    BYTE PTR [rcx],al
  40082d:	78 10                	js     40083f <__GNU_EH_FRAME_HDR+0x97>
  40082f:	01 1b                	add    DWORD PTR [rbx],ebx
  400831:	0c 07                	or     al,0x7
  400833:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400839:	00 00                	add    BYTE PTR [rax],al
  40083b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40083e:	00 00                	add    BYTE PTR [rax],al
  400840:	90                   	nop
  400841:	fc                   	cld    
  400842:	ff                   	(bad)  
  400843:	ff 70 00             	push   QWORD PTR [rax+0x0]
  400846:	00 00                	add    BYTE PTR [rax],al
  400848:	00 0e                	add    BYTE PTR [rsi],cl
  40084a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  40084d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400850:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  400853:	80 00 3f             	add    BYTE PTR [rax],0x3f
  400856:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400858:	2a 33                	sub    dh,BYTE PTR [rbx]
  40085a:	24 22                	and    al,0x22
  40085c:	00 00                	add    BYTE PTR [rax],al
  40085e:	00 00                	add    BYTE PTR [rax],al
  400860:	1c 00                	sbb    al,0x0
  400862:	00 00                	add    BYTE PTR [rax],al
  400864:	44 00 00             	add    BYTE PTR [rax],r8b
  400867:	00 de                	add    dh,bl
  400869:	fd                   	std    
  40086a:	ff                   	(bad)  
  40086b:	ff 2a                	jmp    FWORD PTR [rdx]
  40086d:	00 00                	add    BYTE PTR [rax],al
  40086f:	00 00                	add    BYTE PTR [rax],al
  400871:	41 0e                	rex.B (bad) 
  400873:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400879:	00 00                	add    BYTE PTR [rax],al
  40087b:	00 00                	add    BYTE PTR [rax],al
  40087d:	00 00                	add    BYTE PTR [rax],al
  40087f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400882:	00 00                	add    BYTE PTR [rax],al
  400884:	64 00 00             	add    BYTE PTR fs:[rax],al
  400887:	00 e8                	add    al,ch
  400889:	fd                   	std    
  40088a:	ff                   	(bad)  
  40088b:	ff 5e 00             	call   FWORD PTR [rsi+0x0]
  40088e:	00 00                	add    BYTE PTR [rax],al
  400890:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  400893:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400899:	02 59 0c             	add    bl,BYTE PTR [rcx+0xc]
  40089c:	07                   	(bad)  
  40089d:	08 00                	or     BYTE PTR [rax],al
  40089f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4008a2:	00 00                	add    BYTE PTR [rax],al
  4008a4:	84 00                	test   BYTE PTR [rax],al
  4008a6:	00 00                	add    BYTE PTR [rax],al
  4008a8:	26 fe                	es (bad) 
  4008aa:	ff                   	(bad)  
  4008ab:	ff 2a                	jmp    FWORD PTR [rdx]
  4008ad:	00 00                	add    BYTE PTR [rax],al
  4008af:	00 00                	add    BYTE PTR [rax],al
  4008b1:	41 0e                	rex.B (bad) 
  4008b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4008b9:	65 0c 07             	gs or  al,0x7
  4008bc:	08 00                	or     BYTE PTR [rax],al
  4008be:	00 00                	add    BYTE PTR [rax],al
  4008c0:	44 00 00             	add    BYTE PTR [rax],r8b
  4008c3:	00 a4 00 00 00 38 fe 	add    BYTE PTR [rax+rax*1-0x1c80000],ah
  4008ca:	ff                   	(bad)  
  4008cb:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  4008ce:	00 00                	add    BYTE PTR [rax],al
  4008d0:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  4008d3:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  4008d9:	8e 03                	mov    es,WORD PTR [rbx]
  4008db:	45 0e                	rex.RB (bad) 
  4008dd:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  4008e3:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86701731 <_end+0xffffffff861006d1>
  4008e9:	06                   	(bad)  
  4008ea:	48 0e                	rex.W (bad) 
  4008ec:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  4008f2:	72 0e                	jb     400902 <__GNU_EH_FRAME_HDR+0x15a>
  4008f4:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  4008f7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  4008fa:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  4008fd:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400900:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  400903:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  400906:	08 00                	or     BYTE PTR [rax],al
  400908:	14 00                	adc    al,0x0
  40090a:	00 00                	add    BYTE PTR [rax],al
  40090c:	ec                   	in     al,dx
  40090d:	00 00                	add    BYTE PTR [rax],al
  40090f:	00 60 fe             	add    BYTE PTR [rax-0x2],ah
  400912:	ff                   	(bad)  
  400913:	ff 02                	inc    DWORD PTR [rdx]
	...

0000000000400920 <__FRAME_END__>:
  400920:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	20 06                	and    BYTE PTR [rsi],al
  600e12:	40 00 00             	add    BYTE PTR [rax],al
  600e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	00 06                	add    BYTE PTR [rsi],al
  600e1a:	40 00 00             	add    BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	a8 04                	test   al,0x4
  600e42:	40 00 00             	add    BYTE PTR [rax],al
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 74 07 40          	add    BYTE PTR [rdi+rax*1+0x40],dh
  600e53:	00 00                	add    BYTE PTR [rax],al
  600e55:	00 00                	add    BYTE PTR [rax],al
  600e57:	00 19                	add    BYTE PTR [rcx],bl
  600e59:	00 00                	add    BYTE PTR [rax],al
  600e5b:	00 00                	add    BYTE PTR [rax],al
  600e5d:	00 00                	add    BYTE PTR [rax],al
  600e5f:	00 10                	add    BYTE PTR [rax],dl
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 78 03             	add    BYTE PTR [rax+0x3],bh
  600eb2:	40 00 00             	add    BYTE PTR [rax],al
  600eb5:	00 00                	add    BYTE PTR [rax],al
  600eb7:	00 06                	add    BYTE PTR [rsi],al
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 53 00             	add    BYTE PTR [rbx+0x0],dl
  600ed2:	00 00                	add    BYTE PTR [rax],al
  600ed4:	00 00                	add    BYTE PTR [rax],al
  600ed6:	00 00                	add    BYTE PTR [rax],al
  600ed8:	0b 00                	or     eax,DWORD PTR [rax]
  600eda:	00 00                	add    BYTE PTR [rax],al
  600edc:	00 00                	add    BYTE PTR [rax],al
  600ede:	00 00                	add    BYTE PTR [rax],al
  600ee0:	18 00                	sbb    BYTE PTR [rax],al
  600ee2:	00 00                	add    BYTE PTR [rax],al
  600ee4:	00 00                	add    BYTE PTR [rax],al
  600ee6:	00 00                	add    BYTE PTR [rax],al
  600ee8:	15 00 00 00 00       	adc    eax,0x0
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	90                   	nop
  600f11:	00 00                	add    BYTE PTR [rax],al
  600f13:	00 00                	add    BYTE PTR [rax],al
  600f15:	00 00                	add    BYTE PTR [rax],al
  600f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 18                	add    BYTE PTR [rax],bl
  600f31:	04 40                	add    al,0x40
  600f33:	00 00                	add    BYTE PTR [rax],al
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
	...
  600f41:	04 40                	add    al,0x40
  600f43:	00 00                	add    BYTE PTR [rax],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 e0                	add    al,ah
  600f71:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600f74:	00 00                	add    BYTE PTR [rax],al
  600f76:	00 00                	add    BYTE PTR [rax],al
  600f78:	ff                   	(bad)  
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 cc                	add    ah,cl
  600f91:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 e6                	add    dh,ah
  601019:	04 40                	add    al,0x40
  60101b:	00 00                	add    BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 f6                	add    dh,dh
  601021:	04 40                	add    al,0x40
  601023:	00 00                	add    BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
  601027:	00 06                	add    BYTE PTR [rsi],al
  601029:	05 40 00 00 00       	add    eax,0x40
  60102e:	00 00                	add    BYTE PTR [rax],al
  601030:	16                   	(bad)  
  601031:	05 40 00 00 00       	add    eax,0x40
  601036:	00 00                	add    BYTE PTR [rax],al
  601038:	26 05 40 00 00 00    	es add eax,0x40
  60103e:	00 00                	add    BYTE PTR [rax],al
  601040:	36 05 40 00 00 00    	ss add eax,0x40
	...

Disassembly of section .data:

0000000000601048 <__data_start>:
	...

0000000000601050 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601058 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400430>
   a:	74 75                	je     81 <_init-0x400427>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR [rip+0x302e342e],dh        # 302e3440 <_end+0x2fce23e0>
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x400419>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[rsi+rbp*1],dh
  22:	31 30                	xor    DWORD PTR [rax],esi
  24:	29 20                	sub    DWORD PTR [rax],esp
  26:	35 2e 34 2e 30       	xor    eax,0x302e342e
  2b:	20 32                	and    BYTE PTR [rdx],dh
  2d:	30 31                	xor    BYTE PTR [rcx],dh
  2f:	36 30 36             	xor    BYTE PTR ss:[rsi],dh
  32:	30 39                	xor    BYTE PTR [rcx],bh
	...
